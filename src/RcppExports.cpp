// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// calculateBetasAndSE
List calculateBetasAndSE(Eigen::Map<Eigen::MatrixXd> XX, Eigen::Map<Eigen::MatrixXd> db_CpG, int trait);
RcppExport SEXP _MethParquet_calculateBetasAndSE(SEXP XXSEXP, SEXP db_CpGSEXP, SEXP traitSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd> >::type XX(XXSEXP);
    Rcpp::traits::input_parameter< Eigen::Map<Eigen::MatrixXd> >::type db_CpG(db_CpGSEXP);
    Rcpp::traits::input_parameter< int >::type trait(traitSEXP);
    rcpp_result_gen = Rcpp::wrap(calculateBetasAndSE(XX, db_CpG, trait));
    return rcpp_result_gen;
END_RCPP
}
// solveAndCalculateResiduals
Eigen::VectorXd solveAndCalculateResiduals(Eigen::MatrixXd& XX, Eigen::MatrixXd& db_CpG);
RcppExport SEXP _MethParquet_solveAndCalculateResiduals(SEXP XXSEXP, SEXP db_CpGSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd& >::type XX(XXSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd& >::type db_CpG(db_CpGSEXP);
    rcpp_result_gen = Rcpp::wrap(solveAndCalculateResiduals(XX, db_CpG));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_MethParquet_calculateBetasAndSE", (DL_FUNC) &_MethParquet_calculateBetasAndSE, 3},
    {"_MethParquet_solveAndCalculateResiduals", (DL_FUNC) &_MethParquet_solveAndCalculateResiduals, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_MethParquet(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
