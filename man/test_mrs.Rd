% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/test_mrs.R
\name{test_mrs}
\alias{test_mrs}
\title{Test Methylation Risk Score against a phenotype chosen}
\usage{
test_mrs(db_obj, phe_data = FALSE, mrs, outcome, covariates = FALSE)
}
\arguments{
\item{db_obj}{Methlist containing the phenotype data (subject annotation)
created using \code{\link{create_methlist}}
Sample names in phenotype data should be matching sample names in `mrs`.
Set `db_obj` to `FALSE` if `phe_data` is specified.}

\item{phe_data}{Phenotype data in data frame format. Default: `FALSE`
Sample names in `phe_data` should be matching sample names in `mrs`}

\item{mrs}{Methylation risk score, like the matrix obtained from function \code{\link{dev_meth_score}}}

\item{outcome}{Column for outcome inside phenotype data.}

\item{covariates}{covariates to be included in the model. Default: `FALSE`}
}
\value{
A list containing fitted model and coefficients estimates of methylation risk score (MRS).
For multinomial logistic regression, the list will also contain likelihood ratio test for MRS.
}
\description{
Test Methylation Risk Score against a phenotype chosen
}
\examples{
library(tidyverse)
library(arrow)
library(nnet)
library(car)
data(phenoData)
data(chrAnnotation)
data(ewas_bmi)
wdir <- getwd()
methpath <- system.file('extdata','MethData.csv',package='MethParquet')

# Create Parquet data and MethList
path <- paste0(wdir,'/Parquet_Directory')
write_parquet_meth(data_path=methpath,format='csv',group_by='CHR',parquet_path = path)

mlist <- create_methlist(db_path = path,cpg_col_db='CpG',subject_annot = phenoData,
subject_col_keep='all',cpgAnnot_col_keep=c(1:2,12:13,16),cpg_annot = chrAnnotation,
subject_id='sample_id',cpg_col_annot='Name', gene_col_name = 'UCSC_RefGene_Name')

# Calculation of MRS associated with BMI
mrs_bmi <- dev_meth_score(db_obj=mlist,cpg_col='CpG',meth_effect_data = ewas_bmi,effect_col='Effect')

height <- test_mrs(db_obj = mlist, outcome = 'height', covariates = c('age','sex'), mrs = mrs_bmi)
height[[2]]
unlink(path,recursive=TRUE)
}
